swagger: '2.0'

info:
  version: "1.0.0"
  title: Assijus
  description: Micro-serviço para listar documentos, obter o hash, salvar assinaturas e visualizar PDFs de múltiplos sistemas simultaneamente

# host: assijus.jfrj.jus.br
basePath: /assijus/api/v1
schemes: [http,https]
consumes: [application/json]
produces: [application/json]

tags:
  - name: auth
    description: Obter um token de autenticação e autenticar por uma assinatura digital
  - name: view
    description: Listar documentos a serem assinados e visualizar PDFs
  - name: sign
    description: Obter hash, gravar assinatura digital e validar assinatura digital
  - name: store
    description: Armazenar operações de assinatura em lote (modo EndPoint)

paths:
  /token:
    post:
      description: Obter um token que deverá ser assinado para comprovar a identidade do usuário
      tags: [auth]
      parameters: 
        - $ref: "#/parameters/certificate"
        - $ref: "#/parameters/digest"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              token:
                $ref: "#/definitions/Token"
              policy:
                $ref: "#/definitions/Policy"
              policyversion:
                $ref: "#/definitions/PolicyVersion"
              time:
                $ref: "#/definitions/Time"
              hash:
                $ref: "#/definitions/Hash"
            example:
              policy: AD-RB
              token: TOKEN-2016-05-24T14:05:11.248-03:00
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"

  /auth:
    post:
      description: Verifica a validade de um token e retorna o nome do usuário e o certificado
      tags: [auth]
      parameters:
        - $ref: "#/parameters/authkey"
        - $ref: "#/parameters/token"
        - $ref: "#/parameters/certificate"
        - $ref: "#/parameters/policy"
        - $ref: "#/parameters/policyversion"
        - $ref: "#/parameters/signature"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              authkey:
                $ref: "#/definitions/AuthKey"
              cpf:
                $ref: "#/definitions/CPF"
              name:
                $ref: "#/definitions/Name"
              token:
                $ref: "#/definitions/Token"
              kind:
                $ref: "#/definitions/AuthKind"
              cn:
                type: string
                description: Nome do usuário
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"

  /login:
    post:
      description: Gera um JSON Web Token para autenticar o usuário em um sistema qualquer
      tags: [auth]
      parameters: 
        - $ref: "#/parameters/authkey"
        - name: callback
          in: path
          description: Identificador do systema integrado
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              url:
                type: string
                description: Url para a qual o usuário deve ser redirecionado
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"


  /list:
    post:
      description: Obter a lista de documentos a serem assinados pelo usuário portador do CPF informado
      tags: [view]
      parameters:
        - $ref: "#/parameters/key"
        - $ref: "#/parameters/authkey"
        - $ref: "#/parameters/certificate"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              list:
                type: array
                items:
                  $ref: "#/definitions/Document"
              status:
                type: array
                items:
                  $ref: "#/definitions/ListStatus"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /view/{system}/{id}/{secret}/{authkey}:
    get:
      description: Obter o PDF de um documento para visualização
      tags: [view]
      parameters:
        - $ref: "#/parameters/authkey"
        - name: system
          in: path
          description: Identificador do systema integrado
          required: true
          type: string
        - name: id
          in: path
          description: Identificador do documento
          required: true
          type: string
        - name: secret
          in: path
          description: Segredo do documento
          required: true
          type: string
        - name: cpf
          in: path
          description: CPF do usuário que está consultando
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: file
          headers:
            Content-Type:
              type: string
              description: application/pdf
            Content-Disposition:
              type: string
              description: attachment
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /info/{system}/{id}/{secret}:
    get:
      description: Obter informações de um documento para visualização
      tags: [view]
      parameters:
        - name: system
          in: path
          description: Identificador do systema integrado
          required: true
          type: string
        - name: id
          in: path
          description: Identificador do documento
          required: true
          type: string
        - name: secret
          in: path
          description: Segredo do documento
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              status:
                type: string
              signature:
                type: array
                items:
                  $ref: "#/definitions/Signature"
              movement:
                type: array
                items:
                  $ref: "#/definitions/Movement"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /hash:
    post:
      description: Obter o hash de um documento
      tags: [sign]
      parameters:
        - $ref: "#/parameters/authkey"
        - $ref: "#/parameters/certificate"
        - $ref: "#/parameters/system"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/secret"
        - $ref: "#/parameters/digest"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              policy:
                $ref: "#/definitions/Policy"
              policyversion:
                $ref: "#/definitions/PolicyVersion"
              time:
                $ref: "#/definitions/Time"
              hash:
                $ref: "#/definitions/Hash"
              extra:
                $ref: "#/definitions/Extra"
              sha1:
                $ref: "#/definitions/Sha1"
              sha256:
                $ref: "#/definitions/Sha256"
            example:      
              sha1: csTZGGSt1AG1m3T5VaIzcHX8Av0=
              sha256: 24yd3pPUpPz4dyVdRQAP+zI7R8wTsNX9J7El/a5Bb64=
              urlSave: apolo/save/00489623760_2_67631650_1460490840000_0_0
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /signed-attrs:
    post:
      description: Obter os attributos assináveis para compor uma assinatura com política
      tags: [sign]
      parameters:
        - $ref: "#/parameters/authkey"
        - $ref: "#/parameters/certificate"
        - $ref: "#/parameters/policy"
        - $ref: "#/parameters/sha1"
        - $ref: "#/parameters/sha256"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              policy:
                $ref: "#/definitions/Policy"
              policyversion:
                $ref: "#/definitions/PolicyVersion"
              time:
                $ref: "#/definitions/Time"
              hash:
                $ref: "#/definitions/Hash"
              sha1:
                $ref: "#/definitions/Sha1"
              sha256:
                $ref: "#/definitions/Sha256"
            example:      
              sha1: csTZGGSt1AG1m3T5VaIzcHX8Av0=
              sha256: 24yd3pPUpPz4dyVdRQAP+zI7R8wTsNX9J7El/a5Bb64=
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /envelope:
    post:
      description: Produzir o envelope
      tags: [sign]
      parameters:
        - $ref: "#/parameters/certificate"
        - $ref: "#/parameters/policy"
        - $ref: "#/parameters/policyversion"
        - $ref: "#/parameters/signature"
        - $ref: "#/parameters/sha1"
        - $ref: "#/parameters/sha256"
        - $ref: "#/parameters/time"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              envelope:
                $ref: "#/definitions/Envelope"
              policy:
                $ref: "#/definitions/Policy"
              policyversion:
                $ref: "#/definitions/PolicyVersion"
              time:
                $ref: "#/definitions/Time"
              sha1:
                $ref: "#/definitions/Sha1"
              sha256:
                $ref: "#/definitions/Sha256"
              cpf:
                $ref: "#/definitions/CPF"
              name:
                $ref: "#/definitions/Name"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            

            
  /save:
    post:
      description: Gravar a assinatura do documento
      tags: [sign]
      parameters:
        - $ref: "#/parameters/certificate"
        - $ref: "#/parameters/system"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/code"
        - $ref: "#/parameters/policy"
        - $ref: "#/parameters/policyversion"
        - $ref: "#/parameters/signature"
        - $ref: "#/parameters/sha1"
        - $ref: "#/parameters/sha256"
        - $ref: "#/parameters/time"
        - $ref: "#/parameters/extra"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              status:
                type: string
              warning:
                type: array
                items:
                  $ref: "#/definitions/Warning"
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /validate:
    post:
      description: Valida um envelope CMS de assinatura digital
      tags: [sign]
      parameters:
        - $ref: "#/parameters/envelope"
        - $ref: "#/parameters/sha1"
        - $ref: "#/parameters/sha256"
        - $ref: "#/parameters/time"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              policy:
                $ref: "#/definitions/Policy"
              policyversion:
                $ref: "#/definitions/PolicyVersion"
              policyoid:
                $ref: "#/definitions/PolicyOID"
              cn:
                $ref: "#/definitions/CN"
              cpf:
                $ref: "#/definitions/CPF"
              status:
                type: string
                description: Resultado da validação - GOOD ou UNKNOWN são aceitáveis, outros representam erros
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /verify:
    post:
      description: Valida um envelope CMS de assinatura digital
      tags: [sign]
      parameters:
        - $ref: "#/parameters/system"
        - $ref: "#/parameters/id"
        - $ref: "#/parameters/ref"
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              policy:
                $ref: "#/definitions/Policy"
              policyversion:
                $ref: "#/definitions/PolicyVersion"
              policyoid:
                $ref: "#/definitions/PolicyOID"
              cn:
                $ref: "#/definitions/CN"
              cpf:
                $ref: "#/definitions/CPF"
              status:
                type: string
                description: Resultado da validação - GOOD ou UNKNOWN são aceitáveis, outros representam erros
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /store:
    post:
      description: Armazenar uma lista de documentos para serem assinados digitalmente numa subsequente chamada ao endpoint
      tags: [store]
      parameters:
        - name: payload
          in: formData
          description: Array de bytes em base64 que será armazenado
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              status:
                type: string
              key:
                type: string
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"
            
  /timestamp:
    post:
      description: Produz e armazena um JWT que atesta um hash e um horário
      tags: [timestamp]
      parameters:
        - $ref: "#/parameters/system"
        - $ref: "#/parameters/sha256"
        - name: tipo
          in: formData
          description: Tipo que pode ser sign ou auth
          required: true
          type: string
        - name: nome
          in: formData
          description: Nome do assinate
          required: false
          type: string
        - name: cpf
          in: formData
          description: CPF
          required: false
          type: string
        - name: json
          in: formData
          description: JSON com dados adicionais
          required: false
          type: string
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              jwt:
                type: string
              id:
                type: string
              time:
                $ref: "#/definitions/Time"
              url:
                type: string
              host:
                type: string
                description: IP da máquina do usuário
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"            
            
  /timestamp/generate-key-pair:
    post:
      description: Produz e armazena um JWT que atesta um hash e um horário
      tags: [timestamp]
      parameters: []
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              publickey:
                type: string
                format: byte
              privatekey:
                type: string
                format: byte
        500:
          description: Error ocurred
          schema:
            $ref: "#/definitions/error"            
            
parameters:
  certificate:
    name: certificate
    in: formData
    description: Certificado X509 do assinante em base64
    required: true
    type: string
    format: byte
  digest:
    name: digest
    in: formData
    description: Indica se o hash deve ser passado por um algoritmo de sha1 ou sha256
    required: true
    type: boolean
  key:
    name: key
    in: formData
    description: Chave para o registro que contem a lista de documentos a serem assinados
    required: false
    type: string
  authkey:
    name: authkey
    in: formData
    description: Chave para o registro que comprova a identidade do usuário
    required: true
    type: string
  token:
    name: token
    in: formData
    type: string
    description: Token que deve ser assinado para autenticar o usuário
  envelope:
    name: envelope
    in: formData
    description: Envelope da assinatura digital em base64
    required: true
    type: string
    format: byte
  time:
    name: time
    in: formData
    description: Data e hora da assinatura digital
    required: true
    type: string
    format: date-time
  sha1:
    name: sha1
    in: formData
    description: SHA-1 do PDF codificado em base64
    required: true
    type: string
    format: byte
  sha256:
    name: sha256
    in: formData
    description: SHA-256 do PDF codificado em base64
    required: true
    type: string
    format: byte
  id:  
    name: id
    in: formData
    description: Identificador do documento
    required: true
    type: string
  secret:  
    name: secret
    in: formData
    description: Segredo relacionado ao documento
    required: false
    type: string
  code:  
    name: code
    in: formData
    description: Numero do documento
    required: true
    type: string
  system:
    name: system
    in: formData
    description: Identificador do systema integrado
    required: true
    type: string
  ref:  
    name: ref
    in: formData
    description: Identificador da assinatura
    required: true
    type: string
  signature:
    name: signature
    in: formData
    description: Envelope da assinatura digital em base64
    required: false
    type: string
    format: byte
  policy:
    name: policy
    in: formData
    description: Código da política usada na assinatura digital (PKCS7, AD-RB)
    required: true
    type: string
  policyversion:
    name: policyversion
    in: formData
    description: Número de versão da política usada na assinatura digital
    required: false
    type: string
  extra:
    name: extra
    in: formData
    type: string
    description: Parametros adicionais obtidos durante o hash e necessarios para a gravacao da assinatura
  disposition:
    name: disposition
    in: query
    description: Informar attachment se desejar receber como um download
    required: false
    type: string
            
definitions:
  Document:
    type: object
    properties:
      system: 
        type: string
      id:
        type: string
        description: identificador do documento
      secret:
        type: string
        description: segredo que é usado para garantir o acesso ao documento
      code: 
        type: string
      descr: 
        type: string
      kind: 
        type: string
      origin: 
        type: string
      extra: 
        type: string
    example:
      id: 00489623760_2_67631650_1460490840000_0_0
      code: 0100222-90.2014.4.02.0000
      descr: Conclusão para Decisão  -  Concedida a Antecipação de tutela
      kind: Decisão
      origin: Apolo
      urlView: apolo/view/00489623760_2_67631650_1460490840000_0_0
      urlHash: apolo/hash/00489623760_2_67631650_1460490840000_0_0
      urlSave: apolo/save/00489623760_2_67631650_1460490840000_0_0
      
  ListStatus:
    type: object
    properties:
      system:
        type: string
        description: Identificador do sistema integrado
      errormsg:
        type: string
        description: Mensagem de erro se houver
      stacktrace:
        type: string
        description: Detalhamento do erro

  Warning:
    type: object
    properties:
      label:
        type: string
      description:
        type: string
        
  Policy:
    type: string
    description: Código da política usada na assinatura digital (PKCS7, AD-RB)
    example: AD-RB
    
  PolicyVersion:
    description: Número de versão da política usada na assinatura digital
    type: string      
    example: 2.1
    
  PolicyOID:
    description: Identificador OID da política
    type: string
    example: 2.16.76.1.7.1.1.2.1

  CN:
    type: string
    description: Nome do signatário
    example: RENATO DO AMARAL CRIVANO MACHADO        

  CPF:
    type: string
    description: CPF do signatário
    example: RENATO DO AMARAL CRIVANO MACHADO
 
  AuthKey:
    description: Chave para o registro que comprova a identidade do usuário
    type: string

  AuthKind:
    description: Tipo de autenticação realizada
    type: string

  Token:
    type: string
    description: Token que deve ser assinado para autenticar o usuário        

  Name:
    type: string
    description: Nome do usuário
    
  Certificate:
    type: string
    format: byte
    description: Certificado do usuário em Base64

  Time:
    type: string
    format: date-time
    description: Data e hora da assinatura digital

  Hash:
    type: string
    format: byte
    description: Pacote Assinavel padrao ICP-Brasil em Base64
    
  Envelope:
    type: string
    format: byte
    description: Assinatura Digital padrao ICP-Brasil em Base64
    
  Sha1:
    type: string
    format: byte
    description: SHA-1 do PDF codificado em base64

  Sha256:
    type: string
    format: byte
    description: SHA-256 do PDF codificado em base64

  Extra:
    type: string
    description: Parametros adicionais obtidos durante o hash e necessarios para a gravacao da assinatura

  Signature:
    type: object
    properties:
      ref:
        type: string
      signer:
        type: string
      kind:
        type: string

  Movement:
    type: object
    properties:
      time:
        type: string
        format: date-time
      department:
        type: string
      kind:
        type: string

  error:
    type: object
    properties:
      error:
        type: string
